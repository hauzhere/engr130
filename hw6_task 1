"""
===============================================================================++
ENGR 13000 Fall 2024

Program Description
    Replace this line with a description of your program.

Assignment Information
    Assignment:     Ind HW6 - PY 6
    Author:         Layla Le, le306@purdue.edu
    Team ID:        12


Version 
01.0  py3_task1_template.py - original
2.0  py3_task1_templateV2.py - Added line to model a method to read in data using numpy's genfromtxt
    
ACADEMIC INTEGRITY STATEMENT
I have not used source code obtained from any other unauthorized
source, either modified or unmodified. Neither have I provided
access to my code to another. The project I am submitting
is my own original work.
===============================================================================++
"""

# Write any import statements here (and delete this comment).
import numpy as np
# This basic call in genfromtxt will give you a database which is easy to navigate with standard indexing methods.
data = np.genfromtxt("C:\\Users\\lethu\\Downloads\\list_of_features.csv", delimiter=',', dtype=str)

#1. Start with importing a list of features available for chromosome-to-phenotype mapping using the list_of_features.csv
#2. Translate the flowchart into a script
features = []
genotypes = []
def myfeature():
    print("AVAILABLE FEATURES:")
    for col in data[1:]:
        feature = col[0].rstrip() 
        if feature != "":
            print(feature)
            features.append(feature)  
        
def selectfeature(features):
    feature = input("Please select a feature: ")
    while feature not in features:
        cont = input("Invalid feature. \nWould you like to run again? (y or n)")
        if cont == "y":     
            feature = input("Please select a feature: ")
        else:
            break
    if feature in features:
        return feature

def genotype(feature):
    print("POSSIBLE GENOTYPES:")
    for i in range(1, len(data)):
        if data[i,0].rstrip() == feature:
            max_gen = int(data[i, 4])
            for j in range(0, max_gen):
                print(data[i + j, 3])
                genotypes.append(data[i + j, 3])          

def phenotype(feature):
    genotype = input("Please input the genotype: ")
    if genotype in genotypes:
        for i in range(1, len(data)):
            if data[i, 3] == genotype:
                phenotype = data[i, 5]
                print("This corresponds to the physical attribute: ", phenotype)
    if genotype not in genotypes:
        cont = input("Invalid input. \nWould you like to run again? (y or n)")
        if cont == "y":     
            return True
        else:
            return False
def main():
    cont = True
    while cont == True:
        myfeature()
        feature = selectfeature(features)
        if feature:
            genotype(feature)
            cont = phenotype(feature)
   
main()

